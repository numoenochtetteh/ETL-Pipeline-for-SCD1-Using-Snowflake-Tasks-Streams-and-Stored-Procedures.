ðŸ§¾ SQL CODE: Snowflake Task Setup
1. Set up role, warehouse, and schema
USE ROLE ACCOUNTADMIN;
USE WAREHOUSE COMPUTE_WH;
USE SCHEMA SCD1_DB.PUBLIC;



2. Create Target Table for Customer
sql
Copy
Edit
CREATE OR REPLACE TABLE CUSTOMER (
  CONTACTFIRSTNAME STRING,
  CONTACTLASTNAME STRING,
  CUSTOMERNAME STRING,
  PHONE STRING,
  ADDRESSLINE1 STRING,
  ADDRESSLINE2 STRING,
  CITY STRING,
  STATE STRING,
  POSTALCODE STRING,
  COUNTRY STRING,
  TERRITORY STRING,
  INSERT_DTS TIMESTAMP(6),
  UPDATE_DTS TIMESTAMP(6)
);



3. Create Stored Procedure for SCD1 Logic
sql
Copy
Edit
CREATE OR REPLACE PROCEDURE CUSTOMER_SP()
RETURNS VARCHAR(50)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS
$$
try {
  snowflake.execute({sqlText:`BEGIN TRANSACTION;`});

  snowflake.execute({sqlText:`CREATE OR REPLACE TEMPORARY TABLE CUSTOMER_TEMP AS
    SELECT
      CONTACTFIRSTNAME,
      CONTACTLASTNAME,
      CUSTOMERNAME,
      PHONE,
      ADDRESSLINE1,
      ADDRESSLINE2,
      CITY,
      STATE,
      POSTALCODE,
      COUNTRY,
      TERRITORY,
      CURRENT_TIMESTAMP(6) AS INSERT_DTS,
      CURRENT_TIMESTAMP(6) AS UPDATE_DTS
    FROM CUSTOMER_STREAM;`});

  snowflake.execute({sqlText:`MERGE INTO CUSTOMER TGT
    USING CUSTOMER_TEMP TMP
    ON TGT.CONTACTFIRSTNAME = TMP.CONTACTFIRSTNAME
    AND TGT.CONTACTLASTNAME = TMP.CONTACTLASTNAME

    WHEN MATCHED THEN UPDATE SET
      TGT.CUSTOMERNAME = TMP.CUSTOMERNAME,
      TGT.PHONE = TMP.PHONE,
      TGT.ADDRESSLINE1 = TMP.ADDRESSLINE1,
      TGT.ADDRESSLINE2 = TMP.ADDRESSLINE2,
      TGT.CITY = TMP.CITY,
      TGT.STATE = TMP.STATE,
      TGT.POSTALCODE = TMP.POSTALCODE,
      TGT.COUNTRY = TMP.COUNTRY,
      TGT.TERRITORY = TMP.TERRITORY,
      TGT.UPDATE_DTS = TMP.UPDATE_DTS

    WHEN NOT MATCHED THEN INSERT (
      CONTACTFIRSTNAME, CONTACTLASTNAME, CUSTOMERNAME, PHONE,
      ADDRESSLINE1, ADDRESSLINE2, CITY, STATE, POSTALCODE,
      COUNTRY, TERRITORY, INSERT_DTS, UPDATE_DTS
    ) VALUES (
      TMP.CONTACTFIRSTNAME, TMP.CONTACTLASTNAME, TMP.CUSTOMERNAME, TMP.PHONE,
      TMP.ADDRESSLINE1, TMP.ADDRESSLINE2, TMP.CITY, TMP.STATE, TMP.POSTALCODE,
      TMP.COUNTRY, TMP.TERRITORY, TMP.INSERT_DTS, TMP.UPDATE_DTS
    );`});

  snowflake.execute({sqlText:`COMMIT;`});
  return "Stored Procedure Executed Successfully";
} catch (err) {
  snowflake.execute({sqlText:`ROLLBACK;`});
  throw 'Error: ' + err;
}
$$;



4. Create the Task to Run Stored Procedure
sql
Copy
Edit
CREATE OR REPLACE TASK CUSTOMER_TASK
  WAREHOUSE = COMPUTE_WH
  SCHEDULE = '1 MINUTE'
  WHEN SYSTEM$STREAM_HAS_DATA('CUSTOMER_STREAM')
AS
  CALL CUSTOMER_SP();



5. Start the Task
sql
Copy
Edit
ALTER TASK CUSTOMER_TASK RESUME;



6. Verify the Task
sql
Copy
Edit
SHOW TASKS;
